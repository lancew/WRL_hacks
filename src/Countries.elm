module Countries exposing
    ( Country
    , fromCode, fromCodeCustom, search, searchCustom
    , all
    )

{-| A searchable [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1) based list of country names, codes and emoji flags.

The library is intended to be used qualified (i.e. `Countries.search`, `Countries.all`).

    > import Countries
    > Countries.fromCode "AU"
    Just { name = "Australia", code = "AU", flag = "ðŸ‡¦ðŸ‡º" }
        : Maybe.Maybe Countries.Country

See the `examples` folder for a basic country picker example.

Note: [Country names do change](https://github.com/supermario/elm-countries/commit/0c0475df983c35f936a19c14383385ca4bc96cb5)! It's best to use the code as a key if you are using and storing country details outside of this library.


# Types

@docs Country


# Common helpers

@docs fromCode, fromCodeCustom, search, searchCustom


# Data set

@docs all

-}


{-| The Country record type.

  - name: The [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1) Country name
  - code: [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) two-letter Country code
  - flag: The Country's unicode emoji flag, see [Regional Indicator Symbol](https://en.wikipedia.org/wiki/Regional_Indicator_Symbol)

This type is intentionally not opaque, as accessing the countries reference data as easily as possible is the primary goal.

-}
type alias Country =
    { name : String
    , code : String
    , flag : String
    }


{-| Find a country by its [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) two-letter country code.
-}
fromCode : String -> Maybe Country
fromCode code =
    fromCodeCustom all code


{-| Find a country by its [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) two-letter country code, using a custom Countries list
-}
fromCodeCustom : List Country -> String -> Maybe Country
fromCodeCustom countries code =
    if String.length code /= 3 then
        Nothing

    else
        countries
            |> List.filter
                (\country ->
                    country.code == code
                )
            |> List.head


{-| Search all Countries by case-insensitive string matching on name and code
-}
search : String -> List Country
search searchString =
    searchCustom all searchString


{-| Search a custom Countries list by case-insensitive string matching on name and code
-}
searchCustom : List Country -> String -> List Country
searchCustom countries searchString =
    countries
        |> List.filter
            (\country ->
                String.contains
                    (String.toLower searchString)
                    (String.toLower <| country.name ++ country.code)
            )


{-| The full list of all 249 current [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1) Country records.
-}
all : List Country
all =
    [ ( "Andorra", "AND", "ðŸ‡¦ðŸ‡©" )
    , ( "United Arab Emirates", "UAE", "ðŸ‡¦ðŸ‡ª" )
    , ( "Afghanistan", "AFG", "ðŸ‡¦ðŸ‡«" )
    , ( "Antigua and Barbuda", "ANT", "ðŸ‡¦ðŸ‡¬" )
    , ( "Albania", "ALB", "ðŸ‡¦ðŸ‡±" )
    , ( "Armenia", "ARM", "ðŸ‡¦ðŸ‡²" )
    , ( "Angola", "ANG", "ðŸ‡¦ðŸ‡´" )
    , ( "Argentina", "ARG", "ðŸ‡¦ðŸ‡·" )
    , ( "American Samoa", "ASA", "ðŸ‡¦ðŸ‡¸" )
    , ( "Austria", "AUT", "ðŸ‡¦ðŸ‡¹" )
    , ( "Australia", "AUS", "ðŸ‡¦ðŸ‡º" )
    , ( "Aruba", "ARU", "ðŸ‡¦ðŸ‡¼" )
    , ( "Azerbaijan", "AZE", "ðŸ‡¦ðŸ‡¿" )
    , ( "Bosnia and Herzegovina", "BIH", "ðŸ‡§ðŸ‡¦" )
    , ( "Barbados", "BAR", "ðŸ‡§ðŸ‡§" )
    , ( "Bangladesh", "BAN", "ðŸ‡§ðŸ‡©" )
    , ( "Belgium", "BEL", "ðŸ‡§ðŸ‡ª" )
    , ( "Burkina Faso", "BUR", "ðŸ‡§ðŸ‡«" )
    , ( "Bulgaria", "BUL", "ðŸ‡§ðŸ‡¬" )
    , ( "Bahrain", "BRN", "ðŸ‡§ðŸ‡­" )
    , ( "Burundi", "BDI", "ðŸ‡§ðŸ‡®" )
    , ( "Benin", "BEN", "ðŸ‡§ðŸ‡¯" )
    , ( "Bermuda", "BER", "ðŸ‡§ðŸ‡²" )
    , ( "Brunei Darussalam", "BRU", "ðŸ‡§ðŸ‡³" )
    , ( "Bolivia (Plurinational State of)", "BOL", "ðŸ‡§ðŸ‡´" )
    , ( "Brazil", "BRA", "ðŸ‡§ðŸ‡·" )
    , ( "Bahamas", "BAH", "ðŸ‡§ðŸ‡¸" )
    , ( "Bhutan", "BHU", "ðŸ‡§ðŸ‡¹" )
    , ( "Botswana", "BOT", "ðŸ‡§ðŸ‡¼" )
    , ( "Belarus", "BLR", "ðŸ‡§ðŸ‡¾" )
    , ( "Belize", "BIZ", "ðŸ‡§ðŸ‡¿" )
    , ( "Canada", "CAN", "ðŸ‡¨ðŸ‡¦" )
    , ( "Congo, Democratic Republic of the", "COD", "ðŸ‡¨ðŸ‡©" )
    , ( "Central African Republic", "CAF", "ðŸ‡¨ðŸ‡«" )
    , ( "Congo", "CGO", "ðŸ‡¨ðŸ‡¬" )
    , ( "Switzerland", "SUI", "ðŸ‡¨ðŸ‡­" )
    , ( "CÃ´te d'Ivoire", "CIV", "ðŸ‡¨ðŸ‡®" )
    , ( "Cook Islands", "COK", "ðŸ‡¨ðŸ‡°" )
    , ( "Chile", "CHI", "ðŸ‡¨ðŸ‡±" )
    , ( "Cameroon", "CMR", "ðŸ‡¨ðŸ‡²" )
    , ( "China", "CHN", "ðŸ‡¨ðŸ‡³" )
    , ( "Colombia", "COL", "ðŸ‡¨ðŸ‡´" )
    , ( "Costa Rica", "CRC", "ðŸ‡¨ðŸ‡·" )
    , ( "Cuba", "CUB", "ðŸ‡¨ðŸ‡º" )
    , ( "Cabo Verde", "CPV", "ðŸ‡¨ðŸ‡»" )
    , ( "Cyprus", "CYP", "ðŸ‡¨ðŸ‡¾" )
    , ( "Czechia", "CZE", "ðŸ‡¨ðŸ‡¿" )
    , ( "Germany", "GER", "ðŸ‡©ðŸ‡ª" )
    , ( "Djibouti", "DJI", "ðŸ‡©ðŸ‡¯" )
    , ( "Denmark", "DEN", "ðŸ‡©ðŸ‡°" )
    , ( "Dominica", "DMA", "ðŸ‡©ðŸ‡²" )
    , ( "Dominican Republic", "DOM", "ðŸ‡©ðŸ‡´" )
    , ( "Algeria", "ALG", "ðŸ‡©ðŸ‡¿" )
    , ( "Ecuador", "ECU", "ðŸ‡ªðŸ‡¨" )
    , ( "Estonia", "EST", "ðŸ‡ªðŸ‡ª" )
    , ( "Egypt", "EGY", "ðŸ‡ªðŸ‡¬" )
    , ( "Eritrea", "ERI", "ðŸ‡ªðŸ‡·" )
    , ( "Spain", "ESP", "ðŸ‡ªðŸ‡¸" )
    , ( "Ethiopia", "ETH", "ðŸ‡ªðŸ‡¹" )
    , ( "Finland", "FIN", "ðŸ‡«ðŸ‡®" )
    , ( "Fiji", "FIJ", "ðŸ‡«ðŸ‡¯" )
    , ( "France", "FRA", "ðŸ‡«ðŸ‡·" )
    , ( "Gabon", "GAB", "ðŸ‡¬ðŸ‡¦" )
    , ( "United Kingdom of Great Britain and Northern Ireland", "GBR", "ðŸ‡¬ðŸ‡§" )
    , ( "Grenada", "GRN", "ðŸ‡¬ðŸ‡©" )
    , ( "Georgia", "GEO", "ðŸ‡¬ðŸ‡ª" )
    , ( "Ghana", "GHA", "ðŸ‡¬ðŸ‡­" )
    , ( "Gambia", "GAM", "ðŸ‡¬ðŸ‡²" )
    , ( "Guinea", "GUI", "ðŸ‡¬ðŸ‡³" )
    , ( "Greece", "GRE", "ðŸ‡¬ðŸ‡·" )
    , ( "Guatemala", "GUA", "ðŸ‡¬ðŸ‡¹" )
    , ( "Guam", "GUM", "ðŸ‡¬ðŸ‡º" )
    , ( "Guinea-Bissau", "GBS", "ðŸ‡¬ðŸ‡¼" )
    , ( "Guyana", "GUY", "ðŸ‡¬ðŸ‡¾" )
    , ( "Hong Kong", "HKG", "ðŸ‡­ðŸ‡°" )
    , ( "Honduras", "HON", "ðŸ‡­ðŸ‡³" )
    , ( "Croatia", "CRO", "ðŸ‡­ðŸ‡·" )
    , ( "Haiti", "HAI", "ðŸ‡­ðŸ‡¹" )
    , ( "Hungary", "HUN", "ðŸ‡­ðŸ‡º" )
    , ( "Indonesia", "INA", "ðŸ‡®ðŸ‡©" )
    , ( "Ireland", "IRL", "ðŸ‡®ðŸ‡ª" )
    , ( "Israel", "ISR", "ðŸ‡®ðŸ‡±" )
    , ( "India", "IND", "ðŸ‡®ðŸ‡³" )
    , ( "Iraq", "IRQ", "ðŸ‡®ðŸ‡¶" )
    , ( "Iran (Islamic Republic of)", "IRI", "ðŸ‡®ðŸ‡·" )
    , ( "Iceland", "ISL", "ðŸ‡®ðŸ‡¸" )
    , ( "Italy", "ITA", "ðŸ‡®ðŸ‡¹" )
    , ( "Jamaica", "JAM", "ðŸ‡¯ðŸ‡²" )
    , ( "Jordan", "JOR", "ðŸ‡¯ðŸ‡´" )
    , ( "Japan", "JPN", "ðŸ‡¯ðŸ‡µ" )
    , ( "Kenya", "KEN", "ðŸ‡°ðŸ‡ª" )
    , ( "Kyrgyzstan", "KGZ", "ðŸ‡°ðŸ‡¬" )
    , ( "Cambodia", "CAM", "ðŸ‡°ðŸ‡­" )
    , ( "Kiribati", "KIR", "ðŸ‡°ðŸ‡®" )
    , ( "Saint Kitts and Nevis", "SKN", "ðŸ‡°ðŸ‡³" )
    , ( "Korea (Democratic People's Republic of)", "PRK", "ðŸ‡°ðŸ‡µ" )
    , ( "Korea, Republic of", "KOR", "ðŸ‡°ðŸ‡·" )
    , ( "Kuwait", "KUW", "ðŸ‡°ðŸ‡¼" )
    , ( "Cayman Islands", "CAY", "ðŸ‡°ðŸ‡¾" )
    , ( "Kazakhstan", "KAZ", "ðŸ‡°ðŸ‡¿" )
    , ( "Lao People's Democratic Republic", "LAO", "ðŸ‡±ðŸ‡¦" )
    , ( "Lebanon", "LBN", "ðŸ‡±ðŸ‡§" )
    , ( "Saint Lucia", "LCA", "ðŸ‡±ðŸ‡¨" )
    , ( "Liechtenstein", "LIE", "ðŸ‡±ðŸ‡®" )
    , ( "Sri Lanka", "SRI", "ðŸ‡±ðŸ‡°" )
    , ( "Liberia", "LBR", "ðŸ‡±ðŸ‡·" )
    , ( "Lesotho", "LES", "ðŸ‡±ðŸ‡¸" )
    , ( "Lithuania", "LTU", "ðŸ‡±ðŸ‡¹" )
    , ( "Luxembourg", "LUX", "ðŸ‡±ðŸ‡º" )
    , ( "Latvia", "LAT", "ðŸ‡±ðŸ‡»" )
    , ( "Libya", "LBA", "ðŸ‡±ðŸ‡¾" )
    , ( "Morocco", "MAR", "ðŸ‡²ðŸ‡¦" )
    , ( "Monaco", "MON", "ðŸ‡²ðŸ‡¨" )
    , ( "Moldova, Republic of", "MDA", "ðŸ‡²ðŸ‡©" )
    , ( "Montenegro", "MNE", "ðŸ‡²ðŸ‡ª" )
    , ( "Madagascar", "MAD", "ðŸ‡²ðŸ‡¬" )
    , ( "Marshall Islands", "MHL", "ðŸ‡²ðŸ‡­" )
    , ( "North Macedonia", "MKD", "ðŸ‡²ðŸ‡°" )
    , ( "Mali", "MLI", "ðŸ‡²ðŸ‡±" )
    , ( "Myanmar", "MYA", "ðŸ‡²ðŸ‡²" )
    , ( "Mongolia", "MGL", "ðŸ‡²ðŸ‡³" )
    , ( "Macao", "MAC", "ðŸ‡²ðŸ‡´" )
    , ( "Mauritania", "MTN", "ðŸ‡²ðŸ‡·" )
    , ( "Malta", "MLT", "ðŸ‡²ðŸ‡¹" )
    , ( "Mauritius", "MRI", "ðŸ‡²ðŸ‡º" )
    , ( "Maldives", "MDV", "ðŸ‡²ðŸ‡»" )
    , ( "Malawi", "MAW", "ðŸ‡²ðŸ‡¼" )
    , ( "Mexico", "MEX", "ðŸ‡²ðŸ‡½" )
    , ( "Malaysia", "MAS", "ðŸ‡²ðŸ‡¾" )
    , ( "Mozambique", "MOZ", "ðŸ‡²ðŸ‡¿" )
    , ( "Namibia", "NAM", "ðŸ‡³ðŸ‡¦" )
    , ( "Niger", "NIG", "ðŸ‡³ðŸ‡ª" )
    , ( "Nigeria", "NGR", "ðŸ‡³ðŸ‡¬" )
    , ( "Nicaragua", "NCA", "ðŸ‡³ðŸ‡®" )
    , ( "Netherlands", "NED", "ðŸ‡³ðŸ‡±" )
    , ( "Norway", "NOR", "ðŸ‡³ðŸ‡´" )
    , ( "Nepal", "NEP", "ðŸ‡³ðŸ‡µ" )
    , ( "Nauru", "NRU", "ðŸ‡³ðŸ‡·" )
    , ( "New Zealand", "NZL", "ðŸ‡³ðŸ‡¿" )
    , ( "Oman", "OMA", "ðŸ‡´ðŸ‡²" )
    , ( "Panama", "PAN", "ðŸ‡µðŸ‡¦" )
    , ( "Peru", "PER", "ðŸ‡µðŸ‡ª" )
    , ( "Papua New Guinea", "PNG", "ðŸ‡µðŸ‡¬" )
    , ( "Philippines", "PHI", "ðŸ‡µðŸ‡­" )
    , ( "Pakistan", "PAK", "ðŸ‡µðŸ‡°" )
    , ( "Poland", "POL", "ðŸ‡µðŸ‡±" )
    , ( "Puerto Rico", "PUR", "ðŸ‡µðŸ‡·" )
    , ( "Palestine, State of", "PLE", "ðŸ‡µðŸ‡¸" )
    , ( "Portugal", "POR", "ðŸ‡µðŸ‡¹" )
    , ( "Palau", "PLW", "ðŸ‡µðŸ‡¼" )
    , ( "Paraguay", "PAR", "ðŸ‡µðŸ‡¾" )
    , ( "Qatar", "QAT", "ðŸ‡¶ðŸ‡¦" )
    , ( "Romania", "ROU", "ðŸ‡·ðŸ‡´" )
    , ( "Serbia", "SRB", "ðŸ‡·ðŸ‡¸" )
    , ( "Russian Federation", "RUS", "ðŸ‡·ðŸ‡º" )
    , ( "Rwanda", "RWA", "ðŸ‡·ðŸ‡¼" )
    , ( "Saudi Arabia", "KSA", "ðŸ‡¸ðŸ‡¦" )
    , ( "Solomon Islands", "SOL", "ðŸ‡¸ðŸ‡§" )
    , ( "Seychelles", "SEY", "ðŸ‡¸ðŸ‡¨" )
    , ( "Sudan", "SUD", "ðŸ‡¸ðŸ‡©" )
    , ( "Sweden", "SWE", "ðŸ‡¸ðŸ‡ª" )
    , ( "Singapore", "SGP", "ðŸ‡¸ðŸ‡¬" )
    , ( "Slovenia", "SLO", "ðŸ‡¸ðŸ‡®" )
    , ( "Slovakia", "SVK", "ðŸ‡¸ðŸ‡°" )
    , ( "Sierra Leone", "SLE", "ðŸ‡¸ðŸ‡±" )
    , ( "San Marino", "SMR", "ðŸ‡¸ðŸ‡²" )
    , ( "Senegal", "SEN", "ðŸ‡¸ðŸ‡³" )
    , ( "Somalia", "SOM", "ðŸ‡¸ðŸ‡´" )
    , ( "Suriname", "SUR", "ðŸ‡¸ðŸ‡·" )
    , ( "South Sudan", "SSD", "ðŸ‡¸ðŸ‡¸" )
    , ( "Sao Tome and Principe", "STP", "ðŸ‡¸ðŸ‡¹" )
    , ( "El Salvador", "ESA", "ðŸ‡¸ðŸ‡»" )
    , ( "Syrian Arab Republic", "SYR", "ðŸ‡¸ðŸ‡¾" )
    , ( "Chad", "CHA", "ðŸ‡¹ðŸ‡©" )
    , ( "Togo", "TOG", "ðŸ‡¹ðŸ‡¬" )
    , ( "Thailand", "THA", "ðŸ‡¹ðŸ‡­" )
    , ( "Tajikistan", "TJK", "ðŸ‡¹ðŸ‡¯" )
    , ( "East Timor", "TLS", "ðŸ‡¹ðŸ‡±" )
    , ( "Turkmenistan", "TKM", "ðŸ‡¹ðŸ‡²" )
    , ( "Tunisia", "TUN", "ðŸ‡¹ðŸ‡³" )
    , ( "Tonga", "TGA", "ðŸ‡¹ðŸ‡´" )
    , ( "Turkey", "TUR", "ðŸ‡¹ðŸ‡·" )
    , ( "Trinidad and Tobago", "TTO", "ðŸ‡¹ðŸ‡¹" )
    , ( "Tuvalu", "TUV", "ðŸ‡¹ðŸ‡»" )
    , ( "Tanzania, United Republic of", "TAN", "ðŸ‡¹ðŸ‡¿" )
    , ( "Ukraine", "UKR", "ðŸ‡ºðŸ‡¦" )
    , ( "Uganda", "UGA", "ðŸ‡ºðŸ‡¬" )
    , ( "United States of America", "USA", "ðŸ‡ºðŸ‡¸" )
    , ( "Uruguay", "URU", "ðŸ‡ºðŸ‡¾" )
    , ( "Uzbekistan", "UZB", "ðŸ‡ºðŸ‡¿" )
    , ( "Saint Vincent and the Grenadines", "VIN", "ðŸ‡»ðŸ‡¨" )
    , ( "Venezuela (Bolivarian Republic of)", "VEN", "ðŸ‡»ðŸ‡ª" )
    , ( "Viet Nam", "VIE", "ðŸ‡»ðŸ‡³" )
    , ( "Vanuatu", "VAN", "ðŸ‡»ðŸ‡º" )
    , ( "Samoa", "SAM", "ðŸ‡¼ðŸ‡¸" )
    , ( "Yemen", "YEM", "ðŸ‡¾ðŸ‡ª" )
    , ( "South Africa", "RSA", "ðŸ‡¿ðŸ‡¦" )
    , ( "Zambia", "ZAM", "ðŸ‡¿ðŸ‡²" )
    , ( "Zimbabwe", "ZIM", "ðŸ‡¿ðŸ‡¼" )
    ]
        |> List.map (\( name, code, flag ) -> Country name code flag)
